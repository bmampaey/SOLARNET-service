# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2019-07-23 10:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dataset', '0012_auto_20170328_0904'),
        ('metadata', '0019_ibis_target'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chromis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.TextField(db_index=True, help_text='Unique identification string for the observation metadata, usually in the form YYYYMMDDHHMMSS', unique=True, verbose_name='Observation ID')),
                ('fits_header', models.TextField(blank=True)),
                ('date_beg', models.DateTimeField(blank=True, db_index=True, help_text='Start time of the observation [UTC]', null=True, verbose_name='DATE-BEG')),
                ('date_end', models.DateTimeField(blank=True, db_index=True, help_text='End time of the observation [UTC]', null=True, verbose_name='DATE-END')),
                ('wavemin', models.FloatField(blank=True, db_index=True, help_text='Min value of the observation spectral range [nm]', null=True, verbose_name='WAVEMIN')),
                ('wavemax', models.FloatField(blank=True, db_index=True, help_text='Max value of the observation spectral range [nm]', null=True, verbose_name='WAVEMAX')),
                ('data_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metadata_chromis', to='dataset.DataLocation')),
                ('tags', models.ManyToManyField(blank=True, related_name='metadata_chromis', to='metadata.Tag')),
            ],
            options={
                'ordering': ['date_beg'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Crisp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.TextField(db_index=True, help_text='Unique identification string for the observation metadata, usually in the form YYYYMMDDHHMMSS', unique=True, verbose_name='Observation ID')),
                ('fits_header', models.TextField(blank=True)),
                ('date_beg', models.DateTimeField(blank=True, db_index=True, help_text='Start time of the observation [UTC]', null=True, verbose_name='DATE-BEG')),
                ('date_end', models.DateTimeField(blank=True, db_index=True, help_text='End time of the observation [UTC]', null=True, verbose_name='DATE-END')),
                ('wavemin', models.FloatField(blank=True, db_index=True, help_text='Min value of the observation spectral range [nm]', null=True, verbose_name='WAVEMIN')),
                ('wavemax', models.FloatField(blank=True, db_index=True, help_text='Max value of the observation spectral range [nm]', null=True, verbose_name='WAVEMAX')),
                ('data_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metadata_crisp', to='dataset.DataLocation')),
                ('tags', models.ManyToManyField(blank=True, related_name='metadata_crisp', to='metadata.Tag')),
            ],
            options={
                'ordering': ['date_beg'],
                'abstract': False,
            },
        ),
    ]
