# Generated by Django 3.2.4 on 2021-06-28 20:31

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('metadata', '0030_rename_models'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='aialevel1',
            options={'ordering': ['date_beg'], 'verbose_name': 'AIA level 1'},
        ),
        migrations.AlterModelOptions(
            name='chromis',
            options={'ordering': ['date_beg'], 'verbose_name': 'CHROMIS'},
        ),
        migrations.AlterModelOptions(
            name='chrotel',
            options={'ordering': ['date_beg'], 'verbose_name': 'ChroTel'},
        ),
        migrations.AlterModelOptions(
            name='crisp',
            options={'ordering': ['date_beg'], 'verbose_name': 'CRISP'},
        ),
        migrations.AlterModelOptions(
            name='eitlevel0',
            options={'ordering': ['date_beg'], 'verbose_name': 'EIT level 0'},
        ),
        migrations.AlterModelOptions(
            name='grislevel1',
            options={'ordering': ['date_beg'], 'verbose_name': 'GRIS level 1'},
        ),
        migrations.AlterModelOptions(
            name='hmimagnetogram',
            options={'ordering': ['date_beg'], 'verbose_name': 'HMI magnetogram'},
        ),
        migrations.AlterModelOptions(
            name='ibis',
            options={'ordering': ['date_beg'], 'verbose_name': 'IBIS'},
        ),
        migrations.AlterModelOptions(
            name='rosa',
            options={'ordering': ['date_beg'], 'verbose_name': 'ROSA'},
        ),
        migrations.AlterModelOptions(
            name='swaplevel1',
            options={'ordering': ['date_beg'], 'verbose_name': 'SWAP level 1'},
        ),
        migrations.AlterModelOptions(
            name='themis',
            options={'ordering': ['date_beg'], 'verbose_name': 'Themis'},
        ),
        migrations.AlterModelOptions(
            name='xrt',
            options={'ordering': ['date_beg'], 'verbose_name': 'XRT'},
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='bscale',
            field=models.FloatField(blank=True, null=True, verbose_name='BSCALE'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='content',
            field=models.TextField(blank=True, null=True, verbose_name='CONTENT'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='instrume',
            field=models.TextField(blank=True, null=True, verbose_name='INSTRUME'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='naxis',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='naxis1',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS1'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='naxis2',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS2'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='naxis3',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS3'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='object',
            field=models.TextField(blank=True, null=True, verbose_name='OBJECT'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1a',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1A'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1b',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1B'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1c',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1C'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1d',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1D'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1e',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1E'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1f',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1F'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_1g',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_1G'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2a',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2A'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2b',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2B'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2c',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2C'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2d',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2D'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2e',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2E'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2f',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2F'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc1_2g',
            field=models.FloatField(blank=True, null=True, verbose_name='PC1_2G'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1a',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1A'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1b',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1B'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1c',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1C'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1d',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1D'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1e',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1E'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1f',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1F'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_1g',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_1G'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2a',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2A'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2b',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2B'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2c',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2C'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2d',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2D'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2e',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2E'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2f',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2F'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='pc2_2g',
            field=models.FloatField(blank=True, null=True, verbose_name='PC2_2G'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsname',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAME'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsnamea',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAMEA'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsnameb',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAMEB'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsnamec',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAMEC'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsnamed',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAMED'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsnamee',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAMEE'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsnamef',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAMEF'),
        ),
        migrations.AlterField(
            model_name='chrotel',
            name='wcsnameg',
            field=models.TextField(blank=True, null=True, verbose_name='WCSNAMEG'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='blocks_horz',
            field=models.IntegerField(blank=True, null=True, verbose_name='BLOCKS_HORZ'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='blocks_vert',
            field=models.IntegerField(blank=True, null=True, verbose_name='BLOCKS_VERT'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='camera_err',
            field=models.TextField(blank=True, null=True, verbose_name='CAMERA_ERR'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='datasrc',
            field=models.TextField(blank=True, null=True, verbose_name='DATASRC'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='expmode',
            field=models.TextField(blank=True, null=True, verbose_name='EXPMODE'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='filename',
            field=models.TextField(blank=True, null=True, verbose_name='FILENAME'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='filter',
            field=models.TextField(blank=True, null=True, verbose_name='FILTER'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='image_of_seq',
            field=models.IntegerField(blank=True, null=True, verbose_name='IMAGE_OF_SEQ'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='instrume',
            field=models.TextField(blank=True, null=True, verbose_name='INSTRUME'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='leb_proc',
            field=models.TextField(blank=True, null=True, verbose_name='LEB_PROC'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='line_sync',
            field=models.TextField(blank=True, null=True, verbose_name='LINE_SYNC'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='n_missing_blocks',
            field=models.IntegerField(blank=True, null=True, verbose_name='N_MISSING_BLOCKS'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='num_leb_proc',
            field=models.IntegerField(blank=True, null=True, verbose_name='NUM_LEB_PROC'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='object',
            field=models.TextField(blank=True, null=True, verbose_name='OBJECT'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='obs_prog',
            field=models.TextField(blank=True, null=True, verbose_name='OBS_PROG'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='readout_port',
            field=models.TextField(blank=True, null=True, verbose_name='READOUT_PORT'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='sci_obj',
            field=models.TextField(blank=True, null=True, verbose_name='SCI_OBJ'),
        ),
        migrations.AlterField(
            model_name='eitlevel0',
            name='telescop',
            field=models.TextField(blank=True, null=True, verbose_name='TELESCOP'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='accumul',
            field=models.IntegerField(blank=True, null=True, verbose_name='ACCUMUL'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='actifmir',
            field=models.BooleanField(blank=True, null=True, verbose_name='ACTIFMIR'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='alpha',
            field=models.FloatField(blank=True, null=True, verbose_name='ALPHA'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='analys',
            field=models.TextField(blank=True, null=True, verbose_name='ANALYS'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='angle',
            field=models.IntegerField(blank=True, null=True, verbose_name='ANGLE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='author',
            field=models.TextField(blank=True, null=True, verbose_name='AUTHOR'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='azimuth',
            field=models.FloatField(blank=True, null=True, verbose_name='AZIMUTH'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='beamex',
            field=models.BooleanField(blank=True, null=True, verbose_name='BEAMEX'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='binning',
            field=models.TextField(blank=True, null=True, verbose_name='BINNING'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='blank',
            field=models.IntegerField(blank=True, null=True, verbose_name='BLANK'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='bscale',
            field=models.IntegerField(blank=True, null=True, verbose_name='BSCALE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='bunit',
            field=models.TextField(blank=True, null=True, verbose_name='BUNIT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='bzero',
            field=models.IntegerField(blank=True, null=True, verbose_name='BZERO'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='cam_c',
            field=models.IntegerField(blank=True, null=True, verbose_name='CAM_C'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='cam_f',
            field=models.IntegerField(blank=True, null=True, verbose_name='CAM_F'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='camhl',
            field=models.TextField(blank=True, null=True, verbose_name='CAMHL'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='cmp_desc',
            field=models.TextField(blank=True, null=True, verbose_name='CMP_DESC'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='cmp_name',
            field=models.TextField(blank=True, null=True, verbose_name='CMP_NAME'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='cmp_no',
            field=models.IntegerField(blank=True, null=True, verbose_name='CMP_NO'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='cmp_type',
            field=models.TextField(blank=True, null=True, verbose_name='CMP_TYPE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='colstart',
            field=models.IntegerField(blank=True, null=True, verbose_name='COLSTART'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='contact',
            field=models.TextField(blank=True, null=True, verbose_name='CONTACT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='count',
            field=models.IntegerField(blank=True, null=True, verbose_name='COUNT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='ctype1',
            field=models.TextField(blank=True, null=True, verbose_name='CTYPE1'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='ctype2',
            field=models.TextField(blank=True, null=True, verbose_name='CTYPE2'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='ctype3',
            field=models.TextField(blank=True, null=True, verbose_name='CTYPE3'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='date_obs',
            field=models.DateTimeField(blank=True, null=True, verbose_name='DATE_OBS'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='delta',
            field=models.FloatField(blank=True, null=True, verbose_name='DELTA'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='detector',
            field=models.TextField(blank=True, null=True, verbose_name='DETECTOR'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='dimpix',
            field=models.TextField(blank=True, null=True, verbose_name='DIMPIX'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='dist_ew',
            field=models.FloatField(blank=True, null=True, verbose_name='DIST_EW'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='dist_ns',
            field=models.FloatField(blank=True, null=True, verbose_name='DIST_NS'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='eleva',
            field=models.FloatField(blank=True, null=True, verbose_name='ELEVA'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='email',
            field=models.TextField(blank=True, null=True, verbose_name='EMAIL'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='emgain',
            field=models.IntegerField(blank=True, null=True, verbose_name='EMGAIN'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='exptime',
            field=models.FloatField(blank=True, null=True, verbose_name='EXPTIME'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='extend',
            field=models.BooleanField(blank=True, null=True, verbose_name='EXTEND'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='fileacq',
            field=models.TextField(blank=True, null=True, verbose_name='FILEACQ'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='filename',
            field=models.TextField(blank=True, null=True, verbose_name='FILENAME'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='filterch',
            field=models.TextField(blank=True, null=True, verbose_name='FILTERCH'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='filterfe',
            field=models.TextField(blank=True, null=True, verbose_name='FILTERFE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='filtersp',
            field=models.TextField(blank=True, null=True, verbose_name='FILTERSP'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='grechel',
            field=models.TextField(blank=True, null=True, verbose_name='GRECHEL'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='grpred',
            field=models.TextField(blank=True, null=True, verbose_name='GRPRED'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='indlambd',
            field=models.IntegerField(blank=True, null=True, verbose_name='INDLAMBD'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='indreg',
            field=models.IntegerField(blank=True, null=True, verbose_name='INDREG'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='indstep',
            field=models.IntegerField(blank=True, null=True, verbose_name='INDSTEP'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='indstepx',
            field=models.IntegerField(blank=True, null=True, verbose_name='INDSTEPX'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='indstepy',
            field=models.IntegerField(blank=True, null=True, verbose_name='INDSTEPY'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='institut',
            field=models.TextField(blank=True, null=True, verbose_name='INSTITUT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='instrume',
            field=models.TextField(blank=True, null=True, verbose_name='INSTRUME'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='ixwidth',
            field=models.IntegerField(blank=True, null=True, verbose_name='IXWIDTH'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='iywidth',
            field=models.IntegerField(blank=True, null=True, verbose_name='IYWIDTH'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='latirc',
            field=models.FloatField(blank=True, null=True, verbose_name='LATIRC'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='latitud',
            field=models.FloatField(blank=True, null=True, verbose_name='LATITUD'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='latstart',
            field=models.IntegerField(blank=True, null=True, verbose_name='LATSTART'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='lngstart',
            field=models.FloatField(blank=True, null=True, verbose_name='LNGSTART'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='longcarr',
            field=models.FloatField(blank=True, null=True, verbose_name='LONGCARR'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='longitud',
            field=models.FloatField(blank=True, null=True, verbose_name='LONGITUD'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='longtrc',
            field=models.IntegerField(blank=True, null=True, verbose_name='LONGTRC'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='naxis',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='naxis1',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS1'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='naxis2',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS2'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='naxis3',
            field=models.IntegerField(blank=True, null=True, verbose_name='NAXIS3'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nbcam',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBCAM'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nblambd',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBLAMBD'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nbreg',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBREG'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nbstep',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBSTEP'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nbstep_x',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBSTEP_X'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nbstep_y',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBSTEP_Y'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nburst',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBURST'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nbwin',
            field=models.IntegerField(blank=True, null=True, verbose_name='NBWIN'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nobuf',
            field=models.IntegerField(blank=True, null=True, verbose_name='NOBUF'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nocam',
            field=models.IntegerField(blank=True, null=True, verbose_name='NOCAM'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nomask',
            field=models.TextField(blank=True, null=True, verbose_name='NOMASK'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nowin',
            field=models.IntegerField(blank=True, null=True, verbose_name='NOWIN'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='nshutter',
            field=models.IntegerField(blank=True, null=True, verbose_name='NSHUTTER'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='obj_id',
            field=models.TextField(blank=True, null=True, verbose_name='OBJ_ID'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='object',
            field=models.TextField(blank=True, null=True, verbose_name='OBJECT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='obs_mode',
            field=models.TextField(blank=True, null=True, verbose_name='OBS_MODE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='obs_prog',
            field=models.TextField(blank=True, null=True, verbose_name='OBS_PROG'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='obs_type',
            field=models.TextField(blank=True, null=True, verbose_name='OBS_TYPE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='observer',
            field=models.TextField(blank=True, null=True, verbose_name='OBSERVER'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='offname',
            field=models.TextField(blank=True, null=True, verbose_name='OFFNAME'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='offsets',
            field=models.BooleanField(blank=True, null=True, verbose_name='OFFSETS'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='origin',
            field=models.TextField(blank=True, null=True, verbose_name='ORIGIN'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='physpara',
            field=models.TextField(blank=True, null=True, verbose_name='PHYSPARA'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='pipeline',
            field=models.BooleanField(blank=True, null=True, verbose_name='PIPELINE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='pol_conf',
            field=models.TextField(blank=True, null=True, verbose_name='POL_CONF'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='pol_val',
            field=models.TextField(blank=True, null=True, verbose_name='POL_VAL'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='polarang',
            field=models.FloatField(blank=True, null=True, verbose_name='POLARANG'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='posrot',
            field=models.FloatField(blank=True, null=True, verbose_name='POSROT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='predang',
            field=models.IntegerField(blank=True, null=True, verbose_name='PREDANG'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='prefente',
            field=models.FloatField(blank=True, null=True, verbose_name='PREFENTE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='pregain',
            field=models.IntegerField(blank=True, null=True, verbose_name='PREGAIN'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='prog_id',
            field=models.TextField(blank=True, null=True, verbose_name='PROG_ID'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='prog_num',
            field=models.IntegerField(blank=True, null=True, verbose_name='PROG_NUM'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='qwp_name',
            field=models.TextField(blank=True, null=True, verbose_name='QWP_NAME'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='rescient',
            field=models.TextField(blank=True, null=True, verbose_name='RESCIENT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='rowstart',
            field=models.IntegerField(blank=True, null=True, verbose_name='ROWSTART'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='sci_obj',
            field=models.TextField(blank=True, null=True, verbose_name='SCI_OBJ'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='seq_ind',
            field=models.IntegerField(blank=True, null=True, verbose_name='SEQ_IND'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='seq_stok',
            field=models.TextField(blank=True, null=True, verbose_name='SEQ_STOK'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='solar_b0',
            field=models.FloatField(blank=True, null=True, verbose_name='SOLAR_B0'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='solar_p0',
            field=models.FloatField(blank=True, null=True, verbose_name='SOLAR_P0'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='solar_r',
            field=models.FloatField(blank=True, null=True, verbose_name='SOLAR_R'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='solrot_n',
            field=models.IntegerField(blank=True, null=True, verbose_name='SOLROT_N'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='spatscal',
            field=models.FloatField(blank=True, null=True, verbose_name='SPATSCAL'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='specscal',
            field=models.FloatField(blank=True, null=True, verbose_name='SPECSCAL'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='step_x',
            field=models.IntegerField(blank=True, null=True, verbose_name='STEP_X'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='step_y',
            field=models.IntegerField(blank=True, null=True, verbose_name='STEP_Y'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='svector',
            field=models.FloatField(blank=True, null=True, verbose_name='SVECTOR'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='syscoord',
            field=models.TextField(blank=True, null=True, verbose_name='SYSCOORD'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='tcycle',
            field=models.IntegerField(blank=True, null=True, verbose_name='TCYCLE'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='telescop',
            field=models.TextField(blank=True, null=True, verbose_name='TELESCOP'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='tempbmsp',
            field=models.IntegerField(blank=True, null=True, verbose_name='TEMPBMSP'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='tempcam',
            field=models.IntegerField(blank=True, null=True, verbose_name='TEMPCAM'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='tempqwp1',
            field=models.IntegerField(blank=True, null=True, verbose_name='TEMPQWP1'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='tempqwp2',
            field=models.IntegerField(blank=True, null=True, verbose_name='TEMPQWP2'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='themisff',
            field=models.IntegerField(blank=True, null=True, verbose_name='THEMISFF'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='timestep',
            field=models.IntegerField(blank=True, null=True, verbose_name='TIMESTEP'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='tregion',
            field=models.IntegerField(blank=True, null=True, verbose_name='TREGION'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='wavelnth',
            field=models.IntegerField(blank=True, null=True, verbose_name='WAVELNTH'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='waveunit',
            field=models.IntegerField(blank=True, null=True, verbose_name='WAVEUNIT'),
        ),
        migrations.AlterField(
            model_name='themis',
            name='yfirst',
            field=models.BooleanField(blank=True, null=True, verbose_name='YFIRST'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='achf_ver',
            field=models.IntegerField(blank=True, help_text='AC Huffman table version', null=True, verbose_name='ACHF_VER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='aec_flg',
            field=models.TextField(blank=True, help_text='Automatic Exposure Control; 1: Off, 2: On', null=True, verbose_name='AEC_FLG'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='aec_rslt',
            field=models.IntegerField(blank=True, help_text='Result of AEC calculation used to determine exposure time; 0: Normal, 1: Underexposure, 2: Overexposure, 3: No feedback', null=True, verbose_name='AEC_RSLT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='aec_tnum',
            field=models.IntegerField(blank=True, help_text='AEC table number; 0: Out of RB, 1: In RB', null=True, verbose_name='AEC_TNUM'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='bitc_ver',
            field=models.IntegerField(blank=True, help_text='Bit compression lookup table version', null=True, verbose_name='BITC_VER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='bitcomp1',
            field=models.IntegerField(blank=True, help_text='Compression table keyword', null=True, verbose_name='BITCOMP1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='cal_info',
            field=models.IntegerField(blank=True, help_text='CCD image type; 0: Calibration image, 1: Observation image', null=True, verbose_name='CAL_INFO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='calimage',
            field=models.TextField(blank=True, help_text='CCD readout port (from CAL INFO)', null=True, verbose_name='CALIMAGE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ccd_read',
            field=models.IntegerField(blank=True, help_text='CCD readout port; 0: right, 1: left', null=True, verbose_name='CCD_READ'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ccd_temp',
            field=models.IntegerField(blank=True, help_text='CCD temperature raw', null=True, verbose_name='CCD_TEMP'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ccd_tmpc',
            field=models.FloatField(blank=True, help_text='CCD temperature, derived from CCD TEMP', null=True, verbose_name='CCD_TMPC'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='cdelt1',
            field=models.FloatField(blank=True, help_text='Horizontal pixel size (PLATESCALE X SUMROW)', null=True, verbose_name='CDELT1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='cdelt2',
            field=models.FloatField(blank=True, help_text='Vertical pixel size (PLATESCALE X SUMCOL)', null=True, verbose_name='CDELT2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='crota1',
            field=models.FloatField(blank=True, help_text='Angle between x-axis of image (same as x-axis of CCD) and E-W axis of heliocentric coordinates (SAT ROT + INST ROT)', null=True, verbose_name='CROTA1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='crota2',
            field=models.FloatField(blank=True, help_text='Angle between y-axis of image and N-S axis of heliocentric coordinates (SAT ROT + INST ROT); CROTA1 and CROTA2 are identical for XRT', null=True, verbose_name='CROTA2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='crpix1',
            field=models.FloatField(blank=True, help_text='Column number of Sun center pixel (sometimes negative)', null=True, verbose_name='CRPIX1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='crpix2',
            field=models.FloatField(blank=True, help_text='Row number of Sun center pixel (sometimes negative)', null=True, verbose_name='CRPIX2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='crval1',
            field=models.FloatField(blank=True, help_text='Number of arcseconds of the center of the sun from the reference position in the elevation direction (N-S); positive is to Solar North', null=True, verbose_name='CRVAL1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='crval2',
            field=models.FloatField(blank=True, help_text='Number of arcseconds of the center of the sun from the reference position in the elevation direction (N-S); positive is to Solar North', null=True, verbose_name='CRVAL2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ctime',
            field=models.DateTimeField(blank=True, help_text='Same value as DATE OBS, but in a different format', null=True, verbose_name='CTIME'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ctype1',
            field=models.TextField(blank=True, help_text='Type of units (label) of horizontal axis', null=True, verbose_name='CTYPE1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ctype2',
            field=models.TextField(blank=True, help_text='Type of units (label) of vertical axis', null=True, verbose_name='CTYPE2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='cunit1',
            field=models.TextField(blank=True, help_text='Horizontal units', null=True, verbose_name='CUNIT1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='cunit2',
            field=models.TextField(blank=True, help_text='Vertical Units', null=True, verbose_name='CUNIT2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='data_lev',
            field=models.IntegerField(blank=True, help_text='Data Level; running xrt prep.pro will change 0 to 1', null=True, verbose_name='DATA_LEV'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='datatype',
            field=models.TextField(blank=True, help_text='Science or engineering data; darks and flats are considered engineering data', null=True, verbose_name='DATATYPE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='date',
            field=models.DateTimeField(blank=True, help_text='Date and time of file creation', null=True, verbose_name='DATE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='date_obs',
            field=models.DateTimeField(blank=True, help_text="UTC time when exposure began ('T' is character 'T')", null=True, verbose_name='DATE_OBS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='date_rf0',
            field=models.DateTimeField(blank=True, help_text='Date and time of Level 0 reformatting', null=True, verbose_name='DATE_RF0'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='dchf_ver',
            field=models.IntegerField(blank=True, help_text='DC Huffman table version', null=True, verbose_name='DCHF_VER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_fw1_p',
            field=models.DateTimeField(blank=True, help_text='Filter Wheel 1 position', null=True, verbose_name='E_FW1_P'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_fw1_po',
            field=models.IntegerField(blank=True, help_text='Filter Wheel 1 course position (internal diagnostic format)', null=True, verbose_name='E_FW1_PO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_fw1_st',
            field=models.IntegerField(blank=True, help_text='Filter Wheel 1 status', null=True, verbose_name='E_FW1_ST'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_fw2_p',
            field=models.DateTimeField(blank=True, help_text='Filter Wheel 2 position', null=True, verbose_name='E_FW2_P'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_fw2_po',
            field=models.IntegerField(blank=True, help_text='Filter Wheel 2 course position (internal diagnostic format)', null=True, verbose_name='E_FW2_PO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_fw2_st',
            field=models.IntegerField(blank=True, help_text='Filter Wheel 2 status', null=True, verbose_name='E_FW2_ST'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_lclock',
            field=models.IntegerField(blank=True, help_text='Time at which exposure command processing began, local clock, converted to microsecond', null=True, verbose_name='E_LCLOCK'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sclock',
            field=models.BigIntegerField(blank=True, help_text='Spacecraft clock of most recent status request prior to arrival of exposure command', null=True, verbose_name='E_SCLOCK'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_ccw',
            field=models.IntegerField(blank=True, help_text='Waiting counterclockwise exposure time', null=True, verbose_name='E_SH_CCW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_clo',
            field=models.IntegerField(blank=True, help_text='Time CCD EXPOSE and OPENOUT signals were lowered (low 24 bits), converted to microsecond', null=True, verbose_name='E_SH_CLO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_cw',
            field=models.IntegerField(blank=True, help_text='Waiting clockwise exposure time', null=True, verbose_name='E_SH_CW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_err',
            field=models.IntegerField(blank=True, help_text='0: No error, 1: Shutter command error', null=True, verbose_name='E_SH_ERR'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_ope',
            field=models.IntegerField(blank=True, help_text='Time CCD EXPOSE and OPENOUT signals were raised (low 24 bits), converted to microsecond', null=True, verbose_name='E_SH_OPE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_pos',
            field=models.IntegerField(blank=True, help_text='Shutter encoder position', null=True, verbose_name='E_SH_POS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_wa',
            field=models.IntegerField(blank=True, help_text='Waiting position A', null=True, verbose_name='E_SH_WA'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_wb',
            field=models.IntegerField(blank=True, help_text='Waiting position B', null=True, verbose_name='E_SH_WB'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_sh_wc',
            field=models.IntegerField(blank=True, help_text='Waiting position C', null=True, verbose_name='E_SH_WC'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_ttn',
            field=models.IntegerField(blank=True, help_text='Rev. number of exposure table', null=True, verbose_name='E_TTN'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_vlc',
            field=models.IntegerField(blank=True, help_text='VLS closed microswitch; 0: Off (VLS not fully open), 1: On (VLS fully open)', null=True, verbose_name='E_VLC'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_vlc_s',
            field=models.TextField(blank=True, help_text='State of VLS', null=True, verbose_name='E_VLC_'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_vlo',
            field=models.IntegerField(blank=True, help_text='VLS open microswitch; 0: Off (VLS not fully open), 1: On (VLS fully open)', null=True, verbose_name='E_VLO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='e_vlo_s',
            field=models.TextField(blank=True, help_text='State of VLS', null=True, verbose_name='E_VLO_'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_cd_m_s',
            field=models.TextField(blank=True, help_text='Cadence mode as name', null=True, verbose_name='EC_CD_M_'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_cd_mo',
            field=models.IntegerField(blank=True, help_text='Cadence mode', null=True, verbose_name='EC_CD_MO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_einde',
            field=models.IntegerField(blank=True, help_text='Exposure Index', null=True, verbose_name='EC_EINDE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_fw1',
            field=models.IntegerField(blank=True, help_text='Filter Wheel 1 position', null=True, verbose_name='EC_FW1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_fw1_s',
            field=models.TextField(blank=True, help_text='Filter Wheel 1 position as name', null=True, verbose_name='EC_FW1_'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_fw2',
            field=models.IntegerField(blank=True, help_text='Filter Wheel 2 position', null=True, verbose_name='EC_FW2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_fw2_s',
            field=models.TextField(blank=True, help_text='Filter Wheel 2 position as name', null=True, verbose_name='EC_FW2_'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_id',
            field=models.IntegerField(blank=True, help_text="Unique identiffer, 'main ID'", null=True, verbose_name='EC_ID'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_imty_s',
            field=models.TextField(blank=True, help_text='Image type; a dark is taken with the shutter closed', null=True, verbose_name='EC_IMTY_'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_imtyp',
            field=models.IntegerField(blank=True, help_text='Image type; 0: Normal, 1: Dark (closed shutter)', null=True, verbose_name='EC_IMTYP'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_index',
            field=models.IntegerField(blank=True, help_text='Redundant to EC EINDE; consider this keyword obsolete', null=True, verbose_name='EC_INDEX'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_vl',
            field=models.IntegerField(blank=True, help_text='Visible light shutter during exposure; 0: Closed, 1: Open', null=True, verbose_name='EC_VL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ec_vl_s',
            field=models.TextField(blank=True, help_text='Visible light shutter during exposure as name', null=True, verbose_name='EC_VL_'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='effport',
            field=models.TextField(blank=True, help_text='Rectified readout port', null=True, verbose_name='EFFPORT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='exccdex',
            field=models.IntegerField(blank=True, help_text='Duration of CCD EXPOSE in microsecond; this is the correct value to use for dark exposure times', null=True, verbose_name='EXCCDEX'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='expmpas',
            field=models.DateTimeField(blank=True, help_text='Single or multipass exposure', null=True, verbose_name='EXPMPAS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='exptime',
            field=models.FloatField(blank=True, help_text='Requested exposure time in seconds (calculated from EC_EINDE and exposure table)', null=True, verbose_name='EXPTIME'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='fileorig',
            field=models.TextField(blank=True, help_text='Original filename used by level 0 reformatter', null=True, verbose_name='FILEORIG'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='flflg',
            field=models.TextField(blank=True, help_text='Indicates if flare flag set or not', null=True, verbose_name='FLFLG'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='foc_pos',
            field=models.IntegerField(blank=True, help_text='Focus position', null=True, verbose_name='FOC_POS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='fovx',
            field=models.FloatField(blank=True, help_text='Width of field of view x-axis; equivalent to NAXIS1 X CDELT1', null=True, verbose_name='FOVX'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='fovy',
            field=models.FloatField(blank=True, help_text='Width of field of view y-axis; equivalent to NAXIS2 X CDELT2', null=True, verbose_name='FOVY'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='hktsync',
            field=models.IntegerField(blank=True, help_text='True if fields derived from housekeeping data have been updated. (That is, they are not missing from the database.) Default is false.', null=True, verbose_name='HKTSYNC'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='hlz',
            field=models.TextField(blank=True, help_text='Indicates whether Hinode is in or out of Hight Latitude Zone region', null=True, verbose_name='HLZ'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='img_mode',
            field=models.IntegerField(blank=True, help_text='Image mode (source of exposure trigger); 1: Table and manual, 2: Automatic Region Selection Patrol, 3: Flare Detection Patrol', null=True, verbose_name='IMG_MODE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='imgcomp1',
            field=models.IntegerField(blank=True, help_text='Compression table keyword', null=True, verbose_name='IMGCOMP1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='inst_rot',
            field=models.FloatField(blank=True, help_text='Difference between spacecraft y-axis and image y-axis', null=True, verbose_name='INST_ROT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='instrume',
            field=models.TextField(blank=True, help_text='Name of the instrument; reformatter only retrieves XRT records', null=True, verbose_name='INSTRUME'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='join_sb',
            field=models.TextField(blank=True, help_text='Joint observation; E=EIS, S=SOT, X=XRT', null=True, verbose_name='JOIN_SB'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='jop_id',
            field=models.IntegerField(blank=True, help_text='Identier of JOP', null=True, verbose_name='JOP_ID'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='main_cnt',
            field=models.IntegerField(blank=True, help_text='OT number of times to repeat main loop', null=True, verbose_name='MAIN_CNT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='main_pos',
            field=models.IntegerField(blank=True, help_text='OT main-routine position', null=True, verbose_name='MAIN_POS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='main_rpt',
            field=models.IntegerField(blank=True, help_text='OT current main-routine iteration', null=True, verbose_name='MAIN_RPT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='mdp_clk',
            field=models.BigIntegerField(blank=True, help_text='MDP  clock  in  units  of  1/512th   seconds;  same  as E SCLOCK', null=True, verbose_name='MDP_CLK'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='naxis',
            field=models.IntegerField(blank=True, help_text='Number of axes in the image', null=True, verbose_name='NAXIS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='naxis1',
            field=models.IntegerField(blank=True, help_text='Full image size in x', null=True, verbose_name='NAXIS1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='naxis2',
            field=models.IntegerField(blank=True, help_text='Full image size in y', null=True, verbose_name='NAXIS2'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='noaa_num',
            field=models.IntegerField(blank=True, help_text='AR Number as assigned by NOAA', null=True, verbose_name='NOAA_NUM'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='num_pcks',
            field=models.IntegerField(blank=True, help_text='Data packet keyword', null=True, verbose_name='NUM_PCKS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='obs_dec',
            field=models.TextField(blank=True, help_text='A few sentences describing the properties of the obser- vation.', null=True, verbose_name='OBS_DEC'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='obs_num',
            field=models.IntegerField(blank=True, help_text='Equal to OBS ID', null=True, verbose_name='OBS_NUM'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='observer',
            field=models.TextField(blank=True, help_text='Name(s) of Chief Observer', null=True, verbose_name='OBSERVER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='obstitle',
            field=models.TextField(blank=True, help_text='Title of observation', null=True, verbose_name='OBSTITLE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='obt_end',
            field=models.BigIntegerField(blank=True, help_text='Spacecraft clock time when CCD EXPOSE was lowered; this is E SH CLO converted to spacecraft clock time', null=True, verbose_name='OBT_END'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='obt_time',
            field=models.BigIntegerField(blank=True, help_text='Spacecraft clock time when CCD EXPOSE was raised; this is E SH OPE converted to spacecraft clock time', null=True, verbose_name='OBT_TIME'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='orig_rf0',
            field=models.TextField(blank=True, help_text='Where the level 0 file was created', null=True, verbose_name='ORIG_RF0'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='origin',
            field=models.TextField(blank=True, help_text='Origin of the Chief Observer', null=True, verbose_name='ORIGIN'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='p1col',
            field=models.IntegerField(blank=True, help_text='y-coordinate of beginning, or lower left hand corner, pixel in image FOV; same as RPOS COL', null=True, verbose_name='P1COL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='p1row',
            field=models.IntegerField(blank=True, help_text='x-coordinate of beginning, or lower left hand corner, pixel in image FOV; same as RPOS ROW', null=True, verbose_name='P1ROW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='p2col',
            field=models.IntegerField(blank=True, help_text='y-coordinate of ending, or upper right hand corner, pixel in image FOV; same as RPOS COL + RSIZ COL - 1', null=True, verbose_name='P2COL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='p2row',
            field=models.IntegerField(blank=True, help_text='x-coordinate of ending, or upper right hand corner, pixel in image FOV; same as RPOS ROW + RSIZ ROW - 1', null=True, verbose_name='P2ROW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='parm_ver',
            field=models.IntegerField(blank=True, help_text='OT parameter table version number', null=True, verbose_name='PARM_VER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='pck_sn0',
            field=models.IntegerField(blank=True, help_text='Data packet keyword', null=True, verbose_name='PCK_SN0'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='pck_sn1',
            field=models.IntegerField(blank=True, help_text='Data packet keyword', null=True, verbose_name='PCK_SN1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='planner',
            field=models.TextField(blank=True, help_text='Name(s) of Chief Planner', null=True, verbose_name='PLANNER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='platescl',
            field=models.FloatField(blank=True, help_text='Platescale, in units of arcseconds per pixel', null=True, verbose_name='PLATESCL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='pos_col',
            field=models.IntegerField(blank=True, help_text='CCD column number of start of image (original value multiplied by 8 to get number of pixels)', null=True, verbose_name='POS_COL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='pos_row',
            field=models.IntegerField(blank=True, help_text='CCD row number of start of image (original value mul- tiplied by 8 to get number of pixels)', null=True, verbose_name='POS_ROW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='prog_no',
            field=models.IntegerField(blank=True, help_text='OT program number', null=True, verbose_name='PROG_NO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='prog_ver',
            field=models.IntegerField(blank=True, help_text='MDP observation table program version number', null=True, verbose_name='PROG_VER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='qtab_ver',
            field=models.IntegerField(blank=True, help_text='Quantization table version', null=True, verbose_name='QTAB_VER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='qtable1',
            field=models.IntegerField(blank=True, help_text='Compression table keyword', null=True, verbose_name='QTABLE1'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='readport',
            field=models.TextField(blank=True, help_text='CCD readout port', null=True, verbose_name='READPORT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='rectify',
            field=models.IntegerField(blank=True, help_text='Status of rectification to put solar south-east corner at the start of the CCD image', null=True, verbose_name='RECTIFY'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='roi_h_si',
            field=models.IntegerField(blank=True, help_text='ROI horizontal size; 1: 64, 2: 128, 3: 192, 4: 256, 6: 384, 8: 512, 12: 768, 16: 1024, 24: 1540, 32: 2048; (original value multiplied by 64 to get number of pixels)', null=True, verbose_name='ROI_H_SI'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='roi_v_si',
            field=models.IntegerField(blank=True, help_text='ROI vertical size; 1: 64, 2: 128, 3: 192, 4: 256, 6: 384, 8: 512, 12: 768, 16: 1024, 24: 1540, 32: 2048; (original value multiplied by 64 to get number of pixels)', null=True, verbose_name='ROI_V_SI'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='rpos_col',
            field=models.IntegerField(blank=True, help_text='The rectified coordinate, equivalent to POS COL, as though the image had been read out with this coordinate.  If READPORT=R, RPOS COL=POS COL; otherwise RPOS CPOS COL.', null=True, verbose_name='RPOS_COL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='rpos_row',
            field=models.IntegerField(blank=True, help_text='Rectified POS ROW. Always the same as POS ROW.', null=True, verbose_name='RPOS_ROW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='rsiz_col',
            field=models.IntegerField(blank=True, help_text='Rectified SIZ COL. Always the same as SIZ COL.', null=True, verbose_name='RSIZ_COL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='rsiz_row',
            field=models.IntegerField(blank=True, help_text='Rectified SIZ ROW. Always the same as SIZ ROW.', null=True, verbose_name='RSIZ_ROW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='s_dat_id',
            field=models.IntegerField(blank=True, help_text='Type of status packet this record was created from: 0: Not used, 1: Normal status, 2: Normal and extended status, 3: Normal status and memory, 4: Not used, 5: Standard HDR only, 6: Extended status, 7: Memory', null=True, verbose_name='S_DAT_ID'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='s_dat_m',
            field=models.IntegerField(blank=True, help_text='0: Transfer to Kagoshima Space Center (KSC) and Sagamihara Satellite Operation Center (SSOC); 1: Mon- itor only at KSC', null=True, verbose_name='S_DAT_M'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='s_instru',
            field=models.IntegerField(blank=True, help_text='Instrument number', null=True, verbose_name='S_INSTRU'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='s_sp_siz',
            field=models.IntegerField(blank=True, help_text='Status packet size; maximum value is 609, including header.', null=True, verbose_name='S_SP_SIZ'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='saa',
            field=models.TextField(blank=True, help_text='Indicates whether Hinode is in or out of a South Atlantic Anomaly region', null=True, verbose_name='SAA'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='sat_rot',
            field=models.FloatField(blank=True, help_text='Difference between Solar north and y-axis of the satellite', null=True, verbose_name='SAT_ROT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='satellit',
            field=models.IntegerField(blank=True, help_text='Satellite number', null=True, verbose_name='SATELLIT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='sc_attx',
            field=models.FloatField(blank=True, help_text='Spacecraft attitude in longitude', null=True, verbose_name='SC_ATTX'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='sc_atty',
            field=models.FloatField(blank=True, help_text='Spacecraft attitude in latitude', null=True, verbose_name='SC_ATTY'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='sci_obj',
            field=models.DateTimeField(blank=True, help_text='Up to 5 target phenomena selected from list.', null=True, verbose_name='SCI_OBJ'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='sci_obs',
            field=models.DateTimeField(blank=True, help_text='Target phenomena.', null=True, verbose_name='SCI_OBS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='seqn_cnt',
            field=models.IntegerField(blank=True, help_text='OT current sequence table repeat count', null=True, verbose_name='SEQN_CNT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='seqn_no',
            field=models.IntegerField(blank=True, help_text='OT sequence table number', null=True, verbose_name='SEQN_NO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='seqn_pos',
            field=models.IntegerField(blank=True, help_text='OT sequence table position', null=True, verbose_name='SEQN_POS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='seqn_rpt',
            field=models.IntegerField(blank=True, help_text='OT sequence table repeat count', null=True, verbose_name='SEQN_RPT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='seqn_ver',
            field=models.IntegerField(blank=True, help_text='OT sequence table version number', null=True, verbose_name='SEQN_VER'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='siz_col',
            field=models.IntegerField(blank=True, help_text='Horizontal size of ROI, derived from above; value is 0 if ROI H SIZE is reserved', null=True, verbose_name='SIZ_COL'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='siz_row',
            field=models.IntegerField(blank=True, help_text='Vertical size of ROI, derived from above; value is 0 if ROI V SIZE is reserved', null=True, verbose_name='SIZ_ROW'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='subr_cnt',
            field=models.IntegerField(blank=True, help_text='OT sequential number of this subroutine in the main rou- tine', null=True, verbose_name='SUBR_CNT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='subr_no',
            field=models.IntegerField(blank=True, help_text='OT subroutine number being executed', null=True, verbose_name='SUBR_NO'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='subr_pos',
            field=models.IntegerField(blank=True, help_text='OT loop count for current subroutine', null=True, verbose_name='SUBR_POS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='subr_rpt',
            field=models.IntegerField(blank=True, help_text='OT number of times current subroutine is repeated', null=True, verbose_name='SUBR_RPT'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='target',
            field=models.TextField(blank=True, help_text='Indicates the observation region. Flare site used when flare flag is set. Source of information observation planning database, or telemetry if flare flag is set.', null=True, verbose_name='TARGET'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='time_obs',
            field=models.DateTimeField(blank=True, help_text='Same value as DATE OBS, but in a different format', null=True, verbose_name='TIME-OBS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='timesys',
            field=models.TextField(blank=True, help_text='Time system of file header', null=True, verbose_name='TIMESYS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='tohbans',
            field=models.TextField(blank=True, help_text='Name(s) of Tohbans', null=True, verbose_name='TOHBANS'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='tr_mode',
            field=models.TextField(blank=True, help_text='Tracking mode', null=True, verbose_name='TR_MODE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ver_rf0',
            field=models.TextField(blank=True, help_text='Version of Level 0 reformatter', null=True, verbose_name='VER_RF0'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='xcen',
            field=models.FloatField(blank=True, help_text='X-coordinate of center of field of view', null=True, verbose_name='XCEN'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='xscale',
            field=models.FloatField(blank=True, help_text='Same as PLATESCL', null=True, verbose_name='XSCALE'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='ycen',
            field=models.FloatField(blank=True, help_text='Filter Wheel 1 course position (internal diagnostic format)', null=True, verbose_name='YCEN'),
        ),
        migrations.AlterField(
            model_name='xrt',
            name='yscale',
            field=models.FloatField(blank=True, help_text='Same as PLATESCL', null=True, verbose_name='YSCALE'),
        ),
    ]
