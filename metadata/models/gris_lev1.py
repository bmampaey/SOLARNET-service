from django.db import models

from .base_metadata import BaseMetadata


__all__ = ['GrisLev1']

class GrisLev1(BaseMetadata):
	accumula = models.BigIntegerField('ACCUMULA', help_text='number of accumulations', blank=True, null=True)
	adunorm = models.BigIntegerField('ADUNORM', help_text='normalization factor to ADU', blank=True, null=True)
	aosystem = models.TextField('AOSYSTEM', help_text='adaptative optic system', blank=True, null=True)
	azimut = models.FloatField('AZIMUT', help_text='Sun center azimut (degrees)', blank=True, null=True)
	b0angle = models.FloatField('B0ANGLE', help_text='B0 angle (degrees)', blank=True, null=True)
	bscale = models.FloatField('BSCALE', help_text='data = pixel * BSCALE + BZERO', blank=True, null=True)
	bzero = models.FloatField('BZERO', help_text='offset applied to true pixel values', blank=True, null=True)
	camera = models.TextField('CAMERA', help_text='camera', blank=True, null=True)
	campos = models.FloatField('CAMPOS', help_text='camera mirror position (mm)', blank=True, null=True)
	coefi_1 = models.FloatField('COEFI-1', help_text='coefficient I of state 1', blank=True, null=True)
	coefi_2 = models.FloatField('COEFI-2', help_text='coefficient I of state 2', blank=True, null=True)
	coefi_3 = models.FloatField('COEFI-3', help_text='coefficient I of state 3', blank=True, null=True)
	coefi_4 = models.FloatField('COEFI-4', help_text='coefficient I of state 4', blank=True, null=True)
	coefq_1 = models.FloatField('COEFQ-1', help_text='coefficient Q of state 1', blank=True, null=True)
	coefq_2 = models.FloatField('COEFQ-2', help_text='coefficient Q of state 2', blank=True, null=True)
	coefq_3 = models.FloatField('COEFQ-3', help_text='coefficient Q of state 3', blank=True, null=True)
	coefq_4 = models.FloatField('COEFQ-4', help_text='coefficient Q of state 4', blank=True, null=True)
	coefu_1 = models.FloatField('COEFU-1', help_text='coefficient U of state 1', blank=True, null=True)
	coefu_2 = models.FloatField('COEFU-2', help_text='coefficient U of state 2', blank=True, null=True)
	coefu_3 = models.FloatField('COEFU-3', help_text='coefficient U of state 3', blank=True, null=True)
	coefu_4 = models.FloatField('COEFU-4', help_text='coefficient U of state 4', blank=True, null=True)
	coefv_1 = models.FloatField('COEFV-1', help_text='coefficient V of state 1', blank=True, null=True)
	coefv_2 = models.FloatField('COEFV-2', help_text='coefficient V of state 2', blank=True, null=True)
	coefv_3 = models.FloatField('COEFV-3', help_text='coefficient V of state 3', blank=True, null=True)
	coefv_4 = models.FloatField('COEFV-4', help_text='coefficient V of state 4', blank=True, null=True)
	colpos = models.FloatField('COLPOS', help_text='collimator mirror position (mm)', blank=True, null=True)
	datafram = models.TextField('DATAFRAM', help_text='image portion', blank=True, null=True)
	datavers = models.BigIntegerField('DATAVERS', help_text='data version (0 means raw data)', blank=True, null=True)
	date_obs = models.DateTimeField('DATE-OBS', help_text='data acquisition date (yyyy-mm-dd)', blank=True, null=True)
	dec = models.FloatField('DEC', help_text='Sun center declination (degrees)', blank=True, null=True)
	eimgacc = models.BigIntegerField('EIMGACC', help_text='number of extra images to make an accumulation', blank=True, null=True)
	elevatio = models.FloatField('ELEVATIO', help_text='Sun center elevation (degrees)', blank=True, null=True)
	elperadu = models.BigIntegerField('ELPERADU', help_text='electrons per adu', blank=True, null=True)
	exptime = models.FloatField('EXPTIME', help_text='integration time of each image (msec)', blank=True, null=True)
	filename = models.TextField('FILENAME', help_text='file name', blank=True, null=True)
	filestat = models.TextField('FILESTAT', help_text='file final status', blank=True, null=True)
	fullfram = models.TextField('FULLFRAM', help_text='original full frame size', blank=True, null=True)
	gratangl = models.FloatField('GRATANGL', help_text='grating angle (degrees)', blank=True, null=True)
	hourangl = models.FloatField('HOURANGL', help_text='Sun center hour angle (degrees)', blank=True, null=True)
	ifile = models.BigIntegerField('IFILE', help_text='file index', blank=True, null=True)
	imagtype = models.TextField('IMAGTYPE', help_text='image type', blank=True, null=True)
	irfilter = models.TextField('IRFILTER', help_text='camera filter', blank=True, null=True)
	iserie = models.BigIntegerField('ISERIE', help_text='serie index', blank=True, null=True)
	l0angle = models.FloatField('L0ANGLE', help_text='L0 angle (degrees)', blank=True, null=True)
	lc1_1 = models.BigIntegerField('LC1-1', help_text='state 1 of crystal 1', blank=True, null=True)
	lc1_2 = models.BigIntegerField('LC1-2', help_text='state 2 of crystal 1', blank=True, null=True)
	lc1_3 = models.BigIntegerField('LC1-3', help_text='state 3 of crystal 1', blank=True, null=True)
	lc1_4 = models.BigIntegerField('LC1-4', help_text='state 4 of crystal 1', blank=True, null=True)
	lc2_1 = models.BigIntegerField('LC2-1', help_text='state 1 of crystal 2', blank=True, null=True)
	lc2_2 = models.BigIntegerField('LC2-2', help_text='state 2 of crystal 2', blank=True, null=True)
	lc2_3 = models.BigIntegerField('LC2-3', help_text='state 3 of crystal 2', blank=True, null=True)
	lc2_4 = models.BigIntegerField('LC2-4', help_text='state 4 of crystal 2', blank=True, null=True)
	lcs = models.BigIntegerField('LCS', help_text='number of liquid crystals', blank=True, null=True)
	measure = models.TextField('MEASURE', help_text='measure type', blank=True, null=True)
	naxis = models.BigIntegerField('NAXIS', help_text='number of axes', blank=True, null=True)
	naxis1 = models.BigIntegerField('NAXIS1', help_text='x', blank=True, null=True)
	naxis2 = models.BigIntegerField('NAXIS2', help_text='lambda', blank=True, null=True)
	naxis3 = models.BigIntegerField('NAXIS3', help_text='number of frames in this file', blank=True, null=True)
	nfiles = models.BigIntegerField('NFILES', help_text='number of split files', blank=True, null=True)
	p0angle = models.FloatField('P0ANGLE', help_text='P0 angle (degrees)', blank=True, null=True)
	paraangl = models.FloatField('PARAANGL', help_text='parallactic angle (degrees)', blank=True, null=True)
	r0radius = models.FloatField('R0RADIUS', help_text='solar radius (arcsec)', blank=True, null=True)
	ra = models.FloatField('RA', help_text='Sun center right ascension (degrees)', blank=True, null=True)
	rotangle = models.FloatField('ROTANGLE', help_text='rotator angle (degrees)', blank=True, null=True)
	rotcode = models.BigIntegerField('ROTCODE', help_text='0 means rotator inserted', blank=True, null=True)
	series = models.BigIntegerField('SERIES', help_text='number of repetitions of the measure', blank=True, null=True)
	spsystem = models.TextField('SPSYSTEM', help_text='scanning positioner system', blank=True, null=True)
	states = models.BigIntegerField('STATES', help_text='number of modulation states', blank=True, null=True)
	stepangl = models.FloatField('STEPANGL', help_text='scanning step angle (degrees)', blank=True, null=True)
	steps = models.BigIntegerField('STEPS', help_text='steps of each measure', blank=True, null=True)
	stepsh = models.BigIntegerField('STEPSH', help_text='steps in the axis parallel to the slit', blank=True, null=True)
	stepsize = models.FloatField('STEPSIZE', help_text='scanning step size (arcsec)', blank=True, null=True)
	stepsv = models.BigIntegerField('STEPSV', help_text='steps in the axis perpendicular to the slit', blank=True, null=True)
	telescop = models.TextField('TELESCOP', help_text='telescope', blank=True, null=True)
	temp_lc1 = models.FloatField('TEMP-LC1', help_text='temperature of crystal 1 (C)', blank=True, null=True)
	temp_lc2 = models.FloatField('TEMP-LC2', help_text='temperature of crystal 2 (C)', blank=True, null=True)
	waveleng = models.BigIntegerField('WAVELENG', help_text='spectrograph wavelength (nm)', blank=True, null=True)

