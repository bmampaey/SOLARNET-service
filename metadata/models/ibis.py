
from django.db import models
from .base import BaseMetadata


class Ibis(BaseMetadata):
	baseclmp = models.BigIntegerField('BASECLMP', help_text='Baseline clamp value', blank=True, null=True)
	binning = models.BigIntegerField('BINNING', help_text='BINNING FACTOR', blank=True, null=True)
	bscale = models.FloatField('BSCALE', help_text='TRUE=(FITS VALUE)*BSCALE + BZERO', blank=True, null=True)
	buf_info = models.BigIntegerField('BUF_INFO', help_text='', blank=True, null=True)
	bunit = models.TextField('BUNIT', help_text='PIXEL VALUE', blank=True, null=True)
	bzero = models.FloatField('BZERO', help_text='THE OFFSET', blank=True, null=True)
	ccd_temp = models.BigIntegerField('CCD_TEMP', help_text='CCD SENSOR TEMP', blank=True, null=True)
	channel = models.TextField('CHANNEL', help_text='CAMERA IDENTIFER', blank=True, null=True)
	date = models.DateTimeField('DATE', help_text='DATE THE FILE WAS WRITTEN yyyy-mm-dd', blank=True, null=True)
	date_obs = models.DateTimeField('DATE-OBS', help_text='STARTING DATE AND TIME IN U.T.', blank=True, null=True)
	detector = models.TextField('DETECTOR', help_text='DETECTOR USED TO ACQUIRE THE DATA', blank=True, null=True)
	dst_az = models.FloatField('DST_AZ', help_text='', blank=True, null=True)
	dst_bee0 = models.FloatField('DST_BEE0', help_text='', blank=True, null=True)
	dst_el = models.FloatField('DST_EL', help_text='', blank=True, null=True)
	dst_ell0 = models.FloatField('DST_ELL0', help_text='', blank=True, null=True)
	dst_gdrn = models.FloatField('DST_GDRN', help_text='', blank=True, null=True)
	dst_gpa = models.FloatField('DST_GPA', help_text='', blank=True, null=True)
	dst_hpa = models.FloatField('DST_HPA', help_text='', blank=True, null=True)
	dst_llvl = models.FloatField('DST_LLVL', help_text='', blank=True, null=True)
	dst_pee = models.FloatField('DST_PEE', help_text='', blank=True, null=True)
	dst_rv = models.FloatField('DST_RV', help_text='', blank=True, null=True)
	dst_saz = models.FloatField('DST_SAZ', help_text='', blank=True, null=True)
	dst_sdim = models.FloatField('DST_SDIM', help_text='', blank=True, null=True)
	dst_see = models.FloatField('DST_SEE', help_text='', blank=True, null=True)
	dst_sel = models.FloatField('DST_SEL', help_text='', blank=True, null=True)
	dst_slat = models.FloatField('DST_SLAT', help_text='', blank=True, null=True)
	dst_slng = models.FloatField('DST_SLNG', help_text='', blank=True, null=True)
	dst_tbl = models.FloatField('DST_TBL', help_text='', blank=True, null=True)
	dst_time = models.TextField('DST_TIME', help_text='', blank=True, null=True)
	dst_xgdr = models.FloatField('DST_XGDR', help_text='', blank=True, null=True)
	dst_ygdr = models.FloatField('DST_YGDR', help_text='', blank=True, null=True)
	exp_eff = models.FloatField('EXP_EFF', help_text='ACTUAL EXPOSURE TIME SEC', blank=True, null=True)
	exptime = models.FloatField('EXPTIME', help_text='', blank=True, null=True)
	extend = models.BigIntegerField('EXTEND', help_text='True = EXTENSIONS MAY BE PRESENT IN FILE', blank=True, null=True)
	filename = models.TextField('FILENAME', help_text='DA', blank=True, null=True)
	fileorig = models.TextField('FILEORIG', help_text='OR', blank=True, null=True)
	filter = models.BigIntegerField('FILTER', help_text='', blank=True, null=True)
	fp1_volt = models.FloatField('FP1_VOLT', help_text='', blank=True, null=True)
	fp2_volt = models.FloatField('FP2_VOLT', help_text='', blank=True, null=True)
	framenum = models.BigIntegerField('FRAMENUM', help_text='', blank=True, null=True)
	gain_em = models.BigIntegerField('GAIN_EM', help_text='ELECTRON MULTIPIER GAIN', blank=True, null=True)
	gain_pre = models.TextField('GAIN_PRE', help_text='PRE-AMPLIFIER GAIN', blank=True, null=True)
	gcount = models.BigIntegerField('GCOUNT', help_text='', blank=True, null=True)
	instrume = models.TextField('INSTRUME', help_text='INSTRUMENT USED TO ACQUIRE THE DATA', blank=True, null=True)
	lcvr1_re = models.FloatField('LCVR1_RE', help_text='', blank=True, null=True)
	lcvr1_v = models.FloatField('LCVR1_V', help_text='', blank=True, null=True)
	lcvr2_re = models.FloatField('LCVR2_RE', help_text='', blank=True, null=True)
	lcvr2_v = models.FloatField('LCVR2_V', help_text='', blank=True, null=True)
	naxis = models.BigIntegerField('NAXIS', help_text='NUMBER OF AXES', blank=True, null=True)
	naxis1 = models.BigIntegerField('NAXIS1', help_text='', blank=True, null=True)
	naxis2 = models.BigIntegerField('NAXIS2', help_text='', blank=True, null=True)
	nimages = models.BigIntegerField('NIMAGES', help_text='', blank=True, null=True)
	observer = models.TextField('OBSERVER', help_text='TELESCOPE OPERATORS', blank=True, null=True)
	origin = models.TextField('ORIGIN', help_text='DST', blank=True, null=True)
	pcount = models.BigIntegerField('PCOUNT', help_text='', blank=True, null=True)
	pt4_fs = models.TextField('PT4_FS', help_text='', blank=True, null=True)
	pt4_mir = models.TextField('PT4_MIR', help_text='', blank=True, null=True)
	pt4_pol = models.FloatField('PT4_POL', help_text='', blank=True, null=True)
	pt4_pstg = models.TextField('PT4_PSTG', help_text='', blank=True, null=True)
	pt4_ret = models.FloatField('PT4_RET', help_text='', blank=True, null=True)
	pt4_rstg = models.TextField('PT4_RSTG', help_text='', blank=True, null=True)
	pt4_time = models.TextField('PT4_TIME', help_text='', blank=True, null=True)
	rel_wave = models.FloatField('REL_WAVE', help_text='', blank=True, null=True)
	seq_ctr = models.BigIntegerField('SEQ_CTR', help_text='', blank=True, null=True)
	seq_num = models.TextField('SEQ_NUM', help_text='SEQUENCE NUMBER  (sxxx)', blank=True, null=True)
	seriesid = models.TextField('SERIESID', help_text='SAME TEXT AS PARENT DIRECTORY', blank=True, null=True)
	ser_num = models.BigIntegerField('SER_NUM', help_text='CAMERA SERIAL NUMBER', blank=True, null=True)
	stokes = models.TextField('STOKES', help_text='', blank=True, null=True)
	telescop = models.TextField('TELESCOP', help_text='NAME OF THE TELESCOPE', blank=True, null=True)
	wavelnth = models.FloatField('WAVELNTH', help_text='THE (APPROXIMATE ABS) WAVELENGTH OF THE OBSERVA', blank=True, null=True)
	waveunit = models.BigIntegerField('WAVEUNIT', help_text='', blank=True, null=True)
	wl_prflt = models.TextField('WL_PRFLT', help_text='WHITE LIGHT CAMERA PRE-FILTER WAVELENGTH', blank=True, null=True)
	x_start = models.BigIntegerField('X_START', help_text='X Start position of image', blank=True, null=True)
	xtension = models.TextField('XTENSION', help_text='', blank=True, null=True)
	y_start = models.BigIntegerField('Y_START', help_text='Y Start position of image', blank=True, null=True)
	target = models.TextField('TARGET', help_text='Indicates the observation region', blank=True, null=True)