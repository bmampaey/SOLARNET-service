# Generated by command write_metadata_files version 1
from django.db import models

from .base_metadata import BaseMetadata

__all__ = ['EuiLevel2']

class EuiLevel2(BaseMetadata):
	'''Model for the metadata of dataset EUI level 2'''
	
	class Meta(BaseMetadata.Meta):
		verbose_name = 'EUI level 2 metadata'
		verbose_name_plural = 'EUI level 2 metadata'
	
	fits_header = models.TextField(null=True, blank=True)
	alu = models.BigIntegerField(verbose_name = 'ALU', help_text='CEB ALU register', blank=True, null=True)
	alu2 = models.BigIntegerField(verbose_name = 'ALU2', help_text='CEB ALU2 register', blank=True, null=True)
	apid = models.BigIntegerField(verbose_name = 'APID', help_text='APID number of associated TM', blank=True, null=True)
	att_skd = models.TextField(verbose_name = 'ATT_SKD', help_text='attitude SKD version, +flown/+predicted', blank=True, null=True)
	badpxdef = models.BigIntegerField(verbose_name = 'BADPXDEF', help_text='commanded bad pixel default', blank=True, null=True)
	badpxrem = models.TextField(verbose_name = 'BADPXREM', help_text='commanded bad pixel removal on or off', blank=True, null=True)
	btype = models.TextField(verbose_name = 'BTYPE', help_text='type of data', blank=True, null=True)
	bunit = models.TextField(verbose_name = 'BUNIT', help_text='units of physical value, after BSCALE, BZERO', blank=True, null=True)
	car_rot = models.FloatField(verbose_name = 'CAR_ROT', help_text='carrington rotation number', blank=True, null=True)
	cdelt1 = models.FloatField(verbose_name = 'CDELT1', help_text='pixel scale along axis 1', blank=True, null=True)
	cdelt2 = models.FloatField(verbose_name = 'CDELT2', help_text='pixel scale along axis 2', blank=True, null=True)
	combitpp = models.BigIntegerField(verbose_name = 'COMBITPP', help_text='WICOM compression bpp ( COMBITPP*0.04=bpp)', blank=True, null=True)
	comp_rat = models.FloatField(verbose_name = 'COMP_RAT', help_text='compression ratio: uncompressed/compressed size', blank=True, null=True)
	complete = models.TextField(verbose_name = 'COMPLETE', help_text='C or I for complete/incomplete', blank=True, null=True)
	compress = models.TextField(verbose_name = 'COMPRESS', help_text='data compression quality (None/Lossless/Lossy)', blank=True, null=True)
	comsize = models.BigIntegerField(verbose_name = 'COMSIZE', help_text='number of bytes onboard compressed image', blank=True, null=True)
	comsplmd = models.TextField(verbose_name = 'COMSPLMD', help_text='WICOM compression splitb3 mode', blank=True, null=True)
	comsplvl = models.BigIntegerField(verbose_name = 'COMSPLVL', help_text='WICOM compression splitb3 value', blank=True, null=True)
	comstrip = models.TextField(verbose_name = 'COMSTRIP', help_text='compression type: off=whole image; on=strip', blank=True, null=True)
	comweimd = models.TextField(verbose_name = 'COMWEIMD', help_text='WICOM compression weighting mode', blank=True, null=True)
	comweivl = models.TextField(verbose_name = 'COMWEIVL', help_text='WICOM sub-band coefficient', blank=True, null=True)
	creator = models.TextField(verbose_name = 'CREATOR', help_text='See HISTORY', blank=True, null=True)
	crln_obs = models.FloatField(verbose_name = 'CRLN_OBS', help_text='s/c Carrington longitude (L0 angle)', blank=True, null=True)
	crlt_obs = models.FloatField(verbose_name = 'CRLT_OBS', help_text='s/c Carrington latitude (B0 angle)', blank=True, null=True)
	crota = models.FloatField(verbose_name = 'CROTA', help_text='rotation angle', blank=True, null=True)
	crpix1 = models.FloatField(verbose_name = 'CRPIX1', help_text='reference pixel location along axis 1', blank=True, null=True)
	crpix2 = models.FloatField(verbose_name = 'CRPIX2', help_text='reference pixel location along axis 2', blank=True, null=True)
	crrem = models.TextField(verbose_name = 'CRREM', help_text='cosmic ray removal on or off', blank=True, null=True)
	crremlim = models.BigIntegerField(verbose_name = 'CRREMLIM', help_text='cosmic ray limit', blank=True, null=True)
	crval1 = models.FloatField(verbose_name = 'CRVAL1', help_text='value of reference pixel along axis 1', blank=True, null=True)
	crval2 = models.FloatField(verbose_name = 'CRVAL2', help_text='value of reference pixel along axis 2', blank=True, null=True)
	ctype1 = models.TextField(verbose_name = 'CTYPE1', help_text='helioprojective longitude (Solar X)', blank=True, null=True)
	ctype2 = models.TextField(verbose_name = 'CTYPE2', help_text='helioprojective latitude (Solar Y)', blank=True, null=True)
	cunit1 = models.TextField(verbose_name = 'CUNIT1', help_text='units along axis 1', blank=True, null=True)
	cunit2 = models.TextField(verbose_name = 'CUNIT2', help_text='units along axis 2', blank=True, null=True)
	datamax = models.FloatField(verbose_name = 'DATAMAX', help_text='maximum valid physical value', blank=True, null=True)
	datamean = models.FloatField(verbose_name = 'DATAMEAN', help_text='average pixel value across image', blank=True, null=True)
	datamin = models.FloatField(verbose_name = 'DATAMIN', help_text='minimum valid physical value', blank=True, null=True)
	date = models.DateTimeField(verbose_name = 'DATE', help_text='FITS file creation date', blank=True, null=True)
	date_avg = models.DateTimeField(verbose_name = 'DATE-AVG', help_text='average time of observation', blank=True, null=True)
	date_ear = models.DateTimeField(verbose_name = 'DATE_EAR', help_text='start time of observation Earth', blank=True, null=True)
	date_obs = models.DateTimeField(verbose_name = 'DATE-OBS', help_text='deprecated, same as DATE-BEG.', blank=True, null=True)
	date_sun = models.DateTimeField(verbose_name = 'DATE_SUN', help_text='start time of observation Sun', blank=True, null=True)
	detector = models.TextField(verbose_name = 'DETECTOR', help_text='instrument subunit or sensor', blank=True, null=True)
	detgainh = models.FloatField(verbose_name = 'DETGAINH', help_text='commanded high-gain value', blank=True, null=True)
	detgainl = models.FloatField(verbose_name = 'DETGAINL', help_text='commanded low gain value', blank=True, null=True)
	detreg20 = models.BigIntegerField(verbose_name = 'DETREG20', help_text='REG20_VDAC_CLIPP', blank=True, null=True)
	detreg21 = models.BigIntegerField(verbose_name = 'DETREG21', help_text='REG21_VDAC_OFFSETP', blank=True, null=True)
	detreg22 = models.BigIntegerField(verbose_name = 'DETREG22', help_text='REG22_VDAC_CMREF', blank=True, null=True)
	detreg23 = models.BigIntegerField(verbose_name = 'DETREG23', help_text='REG23_VDAC_OFFSETN', blank=True, null=True)
	detreg24 = models.BigIntegerField(verbose_name = 'DETREG24', help_text='REG24_VDAC_CLIPN', blank=True, null=True)
	detreg25 = models.BigIntegerField(verbose_name = 'DETREG25', help_text='REG25_VDAC_CMREF_LV', blank=True, null=True)
	detreg26 = models.BigIntegerField(verbose_name = 'DETREG26', help_text='REG26_IDAC_CDSSTAGE2_3', blank=True, null=True)
	detreg27 = models.BigIntegerField(verbose_name = 'DETREG27', help_text='REG27_IDAC_CDSSTAGE1_COMPA', blank=True, null=True)
	detreg28 = models.BigIntegerField(verbose_name = 'DETREG28', help_text='REG28_IDAC_INVBUFFER_REFBU', blank=True, null=True)
	detreg29 = models.BigIntegerField(verbose_name = 'DETREG29', help_text='REG29_IDAC_COLBUFFER_COLBU', blank=True, null=True)
	detreg2a = models.BigIntegerField(verbose_name = 'DETREG2A', help_text='REG2A_IDAC_COLPC_COLGAINST', blank=True, null=True)
	detreg2b = models.BigIntegerField(verbose_name = 'DETREG2B', help_text='REG2B_IDAC_OUTPUTDRIVER_CO', blank=True, null=True)
	detreg2c = models.BigIntegerField(verbose_name = 'DETREG2C', help_text='REG2C_VDAC_BLACKSUN_EVEN', blank=True, null=True)
	detreg2d = models.BigIntegerField(verbose_name = 'DETREG2D', help_text='REG2D_IDAC_ABS_REBUFF_TEMP', blank=True, null=True)
	detreg2e = models.BigIntegerField(verbose_name = 'DETREG2E', help_text='REG2E_COLGAIN_EVEN_FF_MID', blank=True, null=True)
	detreg2f = models.BigIntegerField(verbose_name = 'DETREG2F', help_text='REG2F_COLGAIN_EVEN_FF_LOW', blank=True, null=True)
	detreg30 = models.BigIntegerField(verbose_name = 'DETREG30', help_text='REG30_COLGAIN_EVEN_FB_MID', blank=True, null=True)
	detreg31 = models.BigIntegerField(verbose_name = 'DETREG31', help_text='REG31_COLGAIN_EVEN_FB_LOW', blank=True, null=True)
	detreg32 = models.BigIntegerField(verbose_name = 'DETREG32', help_text='REG32_COLGAIN_EVEN_FB_HIGH', blank=True, null=True)
	detreg33 = models.BigIntegerField(verbose_name = 'DETREG33', help_text='REG33_COLGAIN_ODD_FF_MID', blank=True, null=True)
	detreg34 = models.BigIntegerField(verbose_name = 'DETREG34', help_text='REG34_COLGAIN_ODD_FF_LOW', blank=True, null=True)
	detreg35 = models.BigIntegerField(verbose_name = 'DETREG35', help_text='REG35_COLGAIN_ODD_FB_MID', blank=True, null=True)
	detreg36 = models.BigIntegerField(verbose_name = 'DETREG36', help_text='REG36_COLGAIN_ODD_FB_LOW', blank=True, null=True)
	detreg37 = models.BigIntegerField(verbose_name = 'DETREG37', help_text='REG37_COLGAIN_VDAC_SIGCLAM', blank=True, null=True)
	detreg38 = models.BigIntegerField(verbose_name = 'DETREG38', help_text='REG38_CDS_EN_SAMPLE_CLOCK_', blank=True, null=True)
	detreg39 = models.BigIntegerField(verbose_name = 'DETREG39', help_text='REG39_MBS_PIXCOL_ADDR_LOW', blank=True, null=True)
	detreg3a = models.BigIntegerField(verbose_name = 'DETREG3A', help_text='REG3A_MBS_PIXCOL_ADDR_HIGH', blank=True, null=True)
	detreg3b = models.BigIntegerField(verbose_name = 'DETREG3B', help_text='REG3B_MBS_MUXBUS_SR_EOSX_S', blank=True, null=True)
	detreg3c = models.BigIntegerField(verbose_name = 'DETREG3C', help_text='REG3C_VDAC_SIGC_LAMP_BLACK', blank=True, null=True)
	detreg3d = models.BigIntegerField(verbose_name = 'DETREG3D', help_text='REG3D_XWIN_ADDRESS', blank=True, null=True)
	detreg3e = models.BigIntegerField(verbose_name = 'DETREG3E', help_text='REG3E_VDAC_BUSCLAMPHIGH', blank=True, null=True)
	detreg3f = models.BigIntegerField(verbose_name = 'DETREG3F', help_text='REG3F_VDAC_BUSCLAMPLOW', blank=True, null=True)
	doorext = models.TextField(verbose_name = 'DOOREXT', help_text='external HS Door', blank=True, null=True)
	doorint = models.TextField(verbose_name = 'DOORINT', help_text='internal door position', blank=True, null=True)
	doorpos = models.BigIntegerField(verbose_name = 'DOORPOS', help_text='Door position (raw)', blank=True, null=True)
	downloam = models.BigIntegerField(verbose_name = 'DOWNLOAM', help_text='commanded FEE download mode', blank=True, null=True)
	dsun_au = models.FloatField(verbose_name = 'DSUN_AU', help_text='s/c distance from Sun', blank=True, null=True)
	dsun_obs = models.FloatField(verbose_name = 'DSUN_OBS', help_text='s/c distance from Sun', blank=True, null=True)
	ear_tdel = models.FloatField(verbose_name = 'EAR_TDEL', help_text='Time(Sun to Earth) - Time(Sun to S/C)', blank=True, null=True)
	euxcen = models.FloatField(verbose_name = 'EUXCEN', help_text='axis 1 location of solar center in L1', blank=True, null=True)
	euycen = models.FloatField(verbose_name = 'EUYCEN', help_text='axis 2 location of solar center in L1', blank=True, null=True)
	filcpos = models.BigIntegerField(verbose_name = 'FILCPOS', help_text='filter wheel commanded position', blank=True, null=True)
	file_raw = models.TextField(verbose_name = 'FILE_RAW', help_text='raw filename', blank=True, null=True)
	filename = models.TextField(verbose_name = 'FILENAME', help_text='FITS filename', blank=True, null=True)
	filter = models.TextField(verbose_name = 'FILTER', help_text='physical filter during acquisition', blank=True, null=True)
	filtpos = models.BigIntegerField(verbose_name = 'FILTPOS', help_text='(0-199) filter wheel position service5', blank=True, null=True)
	gaincomb = models.TextField(verbose_name = 'GAINCOMB', help_text='commanded low/high gain combination', blank=True, null=True)
	gainhg = models.BigIntegerField(verbose_name = 'GAINHG', help_text='global gain corr. high gain', blank=True, null=True)
	gainlg = models.BigIntegerField(verbose_name = 'GAINLG', help_text='global gain corr. low gain', blank=True, null=True)
	gainthre = models.BigIntegerField(verbose_name = 'GAINTHRE', help_text='commanded threshold value for H/L gain', blank=True, null=True)
	gaofstat = models.TextField(verbose_name = 'GAOFSTAT', help_text='status of the CEB gain and offset correction', blank=True, null=True)
	gcount = models.BigIntegerField(verbose_name = 'GCOUNT', help_text='number of groups', blank=True, null=True)
	gsex_obs = models.FloatField(verbose_name = 'GSEX_OBS', help_text='s/c Geocentric Solar Ecliptic X', blank=True, null=True)
	gsey_obs = models.FloatField(verbose_name = 'GSEY_OBS', help_text='s/c Geocentric Solar Ecliptic Y', blank=True, null=True)
	gsez_obs = models.FloatField(verbose_name = 'GSEZ_OBS', help_text='s/c Geocentric Solar Ecliptic Z', blank=True, null=True)
	haex_obs = models.FloatField(verbose_name = 'HAEX_OBS', help_text='s/c Heliocentric Aries Ecliptic X', blank=True, null=True)
	haey_obs = models.FloatField(verbose_name = 'HAEY_OBS', help_text='s/c Heliocentric Aries Ecliptic Y', blank=True, null=True)
	haez_obs = models.FloatField(verbose_name = 'HAEZ_OBS', help_text='s/c Heliocentric Aries Ecliptic Z', blank=True, null=True)
	hcix_obs = models.FloatField(verbose_name = 'HCIX_OBS', help_text='s/c Heliocentric Inertial X', blank=True, null=True)
	hcix_vob = models.FloatField(verbose_name = 'HCIX_VOB', help_text='s/c Heliocentric Inertial X Velocity', blank=True, null=True)
	hciy_obs = models.FloatField(verbose_name = 'HCIY_OBS', help_text='s/c Heliocentric Inertial Y', blank=True, null=True)
	hciy_vob = models.FloatField(verbose_name = 'HCIY_VOB', help_text='s/c Heliocentric Inertial Y Velocity', blank=True, null=True)
	hciz_obs = models.FloatField(verbose_name = 'HCIZ_OBS', help_text='s/c Heliocentric Inertial Z', blank=True, null=True)
	hciz_vob = models.FloatField(verbose_name = 'HCIZ_VOB', help_text='s/c Heliocentric Inertial Z Velocity', blank=True, null=True)
	heex_obs = models.FloatField(verbose_name = 'HEEX_OBS', help_text='s/c Heliocentric Earth Ecliptic X', blank=True, null=True)
	heey_obs = models.FloatField(verbose_name = 'HEEY_OBS', help_text='s/c Heliocentric Earth Ecliptic Y', blank=True, null=True)
	heez_obs = models.FloatField(verbose_name = 'HEEZ_OBS', help_text='s/c Heliocentric Earth Ecliptic Z', blank=True, null=True)
	heqx_obs = models.FloatField(verbose_name = 'HEQX_OBS', help_text='s/c Heliocentric Earth Equatorial X', blank=True, null=True)
	heqy_obs = models.FloatField(verbose_name = 'HEQY_OBS', help_text='s/c Heliocentric Earth Equatorial Y', blank=True, null=True)
	heqz_obs = models.FloatField(verbose_name = 'HEQZ_OBS', help_text='s/c Heliocentric Earth Equatorial Z', blank=True, null=True)
	hgln_obs = models.FloatField(verbose_name = 'HGLN_OBS', help_text='s/c Heliographic longitude', blank=True, null=True)
	hglt_obs = models.FloatField(verbose_name = 'HGLT_OBS', help_text='s/c Heliographic latitude (B0 angle)', blank=True, null=True)
	imgtype = models.TextField(verbose_name = 'IMGTYPE', help_text='type of image; solar, calib., engineering', blank=True, null=True)
	info_url = models.TextField(verbose_name = 'INFO_URL', help_text='Link to additional information', blank=True, null=True)
	instrume = models.TextField(verbose_name = 'INSTRUME', help_text='instrument name', blank=True, null=True)
	jobid = models.TextField(verbose_name = 'JOBID', help_text='unique pipeline job ID', blank=True, null=True)
	ledstate = models.TextField(verbose_name = 'LEDSTATE', help_text='LED control for current telescope', blank=True, null=True)
	level = models.TextField(verbose_name = 'LEVEL', help_text='data processing level', blank=True, null=True)
	longstrn = models.TextField(verbose_name = 'LONGSTRN', help_text='The OGIP long string convention may be used', blank=True, null=True)
	lonpole = models.FloatField(verbose_name = 'LONPOLE', help_text='native longitude of the celestial pole', blank=True, null=True)
	lyacmcp = models.FloatField(verbose_name = 'LYACMCP', help_text='commanded MCP voltage', blank=True, null=True)
	lyacscr = models.FloatField(verbose_name = 'LYACSCR', help_text='commanded screen voltage', blank=True, null=True)
	lyaimcp = models.FloatField(verbose_name = 'LYAIMCP', help_text='measured MCP current', blank=True, null=True)
	lyavmcp = models.FloatField(verbose_name = 'LYAVMCP', help_text='measured MCP voltage', blank=True, null=True)
	lyavscr = models.FloatField(verbose_name = 'LYAVSCR', help_text='measured MCP+screen voltage', blank=True, null=True)
	naxis = models.BigIntegerField(verbose_name = 'NAXIS', help_text='number of axes in data cube', blank=True, null=True)
	naxis1 = models.BigIntegerField(verbose_name = 'NAXIS1', help_text='length of data axis 1', blank=True, null=True)
	naxis2 = models.BigIntegerField(verbose_name = 'NAXIS2', help_text='length of data axis 2', blank=True, null=True)
	nbin = models.BigIntegerField(verbose_name = 'NBIN', help_text='total binning factor', blank=True, null=True)
	nbin1 = models.BigIntegerField(verbose_name = 'NBIN1', help_text='on-board binning factor in dim 1', blank=True, null=True)
	nbin2 = models.BigIntegerField(verbose_name = 'NBIN2', help_text='on-board binning factor in dim 1', blank=True, null=True)
	obs_id = models.TextField(verbose_name = 'OBS_ID', help_text='unique ID of the individual observation', blank=True, null=True)
	obs_mode = models.TextField(verbose_name = 'OBS_MODE', help_text='observation mode', blank=True, null=True)
	obs_type = models.TextField(verbose_name = 'OBS_TYPE', help_text='encoded version of OBS_MODE', blank=True, null=True)
	obs_vr = models.FloatField(verbose_name = 'OBS_VR', help_text='Radial velocity of S/C relative to Sun', blank=True, null=True)
	obsrvtry = models.TextField(verbose_name = 'OBSRVTRY', help_text='satellite name', blank=True, null=True)
	obt_beg = models.FloatField(verbose_name = 'OBT_BEG', help_text='start acquisition time in OBT', blank=True, null=True)
	offsethg = models.BigIntegerField(verbose_name = 'OFFSETHG', help_text='global offset corr. high gain', blank=True, null=True)
	offsetlg = models.BigIntegerField(verbose_name = 'OFFSETLG', help_text='global offset corr. low gain', blank=True, null=True)
	origin = models.TextField(verbose_name = 'ORIGIN', help_text='file generation location', blank=True, null=True)
	parent = models.TextField(verbose_name = 'PARENT', help_text='source file', blank=True, null=True)
	pc1_1 = models.FloatField(verbose_name = 'PC1_1', help_text='WCS coordinate transformation matrix', blank=True, null=True)
	pc1_2 = models.FloatField(verbose_name = 'PC1_2', help_text='WCS coordinate transformation matrix', blank=True, null=True)
	pc2_1 = models.FloatField(verbose_name = 'PC2_1', help_text='WCS coordinate transformation matrix', blank=True, null=True)
	pc2_2 = models.FloatField(verbose_name = 'PC2_2', help_text='WCS coordinate transformation matrix', blank=True, null=True)
	pcount = models.BigIntegerField(verbose_name = 'PCOUNT', help_text='number of group parameters', blank=True, null=True)
	priority = models.BigIntegerField(verbose_name = 'PRIORITY', help_text='priority # of image/histogram when downloaded', blank=True, null=True)
	pxbeg1 = models.BigIntegerField(verbose_name = 'PXBEG1', help_text='first read-out pixel in dimension 1', blank=True, null=True)
	pxbeg2 = models.BigIntegerField(verbose_name = 'PXBEG2', help_text='first read-out pixel in dimension 2', blank=True, null=True)
	pxend1 = models.BigIntegerField(verbose_name = 'PXEND1', help_text='last read-out pixel in dimension 1', blank=True, null=True)
	pxend2 = models.BigIntegerField(verbose_name = 'PXEND2', help_text='last read-out pixel in dimension 2', blank=True, null=True)
	readoutm = models.BigIntegerField(verbose_name = 'READOUTM', help_text='commanded FEE readout mode', blank=True, null=True)
	rechigh = models.BigIntegerField(verbose_name = 'RECHIGH', help_text='rec. threshold high(clipped 2^RECNRBIT-1)', blank=True, null=True)
	reclow = models.BigIntegerField(verbose_name = 'RECLOW', help_text='rec. threshold low (clipped 0)', blank=True, null=True)
	recnrbit = models.BigIntegerField(verbose_name = 'RECNRBIT', help_text='bit depth recoding output (sqrt)', blank=True, null=True)
	recstate = models.TextField(verbose_name = 'RECSTATE', help_text='recoding on or off', blank=True, null=True)
	rsun_arc = models.FloatField(verbose_name = 'RSUN_ARC', help_text='apparent photospheric solar radius', blank=True, null=True)
	rsun_obs = models.FloatField(verbose_name = 'RSUN_OBS', help_text='apparent photospheric solar radius', blank=True, null=True)
	rsun_ref = models.BigIntegerField(verbose_name = 'RSUN_REF', help_text='assumed physical solar radius', blank=True, null=True)
	scitabid = models.BigIntegerField(verbose_name = 'SCITABID', help_text='exposure identifier in sec. science table', blank=True, null=True)
	scitabnr = models.BigIntegerField(verbose_name = 'SCITABNR', help_text='sequential number of SCITABID', blank=True, null=True)
	solar_b0 = models.FloatField(verbose_name = 'SOLAR_B0', help_text='s/c tilt of solar North pole', blank=True, null=True)
	solar_ep = models.FloatField(verbose_name = 'SOLAR_EP', help_text='s/c ecliptic North to solar North angle', blank=True, null=True)
	solar_p0 = models.FloatField(verbose_name = 'SOLAR_P0', help_text='s/c celestial North to solar North angle', blank=True, null=True)
	soopname = models.TextField(verbose_name = 'SOOPNAME', help_text='name of the SOOP Campaign that the data belong', blank=True, null=True)
	sooptype = models.TextField(verbose_name = 'SOOPTYPE', help_text='campaign ID(s) that the data belong to', blank=True, null=True)
	sun_time = models.FloatField(verbose_name = 'SUN_TIME', help_text='Time(Sun to S/C)', blank=True, null=True)
	target = models.TextField(verbose_name = 'TARGET', help_text='type of target from planning', blank=True, null=True)
	telescop = models.TextField(verbose_name = 'TELESCOP', help_text='telescope/Sensor name', blank=True, null=True)
	temp1det = models.FloatField(verbose_name = 'TEMP1DET', help_text='last measured APS det. T before date-avg', blank=True, null=True)
	temp2det = models.FloatField(verbose_name = 'TEMP2DET', help_text='earliest measured APS det. T after date-avg', blank=True, null=True)
	tempint = models.FloatField(verbose_name = 'TEMPINT', help_text='internal APS detector temperature', blank=True, null=True)
	timesys = models.TextField(verbose_name = 'TIMESYS', help_text='system used for time keywords', blank=True, null=True)
	ttemp1 = models.DateTimeField(verbose_name = 'TTEMP1', help_text='time TEMP1DET measurement', blank=True, null=True)
	ttemp2 = models.DateTimeField(verbose_name = 'TTEMP2', help_text='time TEMP2DET measurement', blank=True, null=True)
	ucd = models.TextField(verbose_name = 'UCD', help_text='Unified Content Descriptor', blank=True, null=True)
	vers_cal = models.TextField(verbose_name = 'VERS_CAL', help_text='cal version (euiprep git short SHA-1)', blank=True, null=True)
	vers_sw = models.TextField(verbose_name = 'VERS_SW', help_text='(L1) version of SW that provided FITS file', blank=True, null=True)
	version = models.TextField(verbose_name = 'VERSION', help_text='incremental version number', blank=True, null=True)
	wavelnth = models.BigIntegerField(verbose_name = 'WAVELNTH', help_text='characteristic wavelength observation', blank=True, null=True)
	wcsname = models.TextField(verbose_name = 'WCSNAME', help_text='name of coordinate system', blank=True, null=True)
	xposure = models.FloatField(verbose_name = 'XPOSURE', help_text='total effective exposure time', blank=True, null=True)
